language: php

# Création d'un environnement Ubuntu Trusty
dist: trusty
sudo: required

addons:
   chrome: stable
   # Pour Elasticsearch
   apt:
    packages:
      - oracle-java8-set-default 

# sudo: true

php:
  - '7.2.9'

services:
   - mysql
   # ElasticSearch uses the default configuration and is available on 127.0.0.1.
   - elasticsearch

# Cache composer packages so "composer install" is faster
cache:
   directories:
     - $HOME/.composer/cache/files  # "Booste" le composer install qui suit

install:
  #=====================================================================
  # Elasticsearch test commit
  #=====================================================================
  - wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.1.1.tar.gz
  - tar -xzf elasticsearch-5.1.1.tar.gz
  - ./elasticsearch-5.1.1/bin/elasticsearch &
  #=====================================================================

before_script:
  #=====================================================================
  # Elasticsearch
  #=====================================================================
  - sleep 10 # ElasticSearch takes few seconds to start...
  - composer install
  - touch .env
  - cp .env.dist .env

script:
   # Installation du navigateur Chrome virtuel
   - google-chrome-stable --no-sandbox --headless --disable-gpu --remote-debugging-port=9222 http://127.0.0.1:8000 &
   # Lancement du serveur natif de Symfony
   - php bin/console server:run &
   #=====================================================================
   # Accès à la base de données
   #=====================================================================
   - php bin/console doctrine:database:create --env=test
   - php bin/console doctrine:schema:create --env=test
   - php bin/console doctrine:fixtures:load -n --env=test
   #=====================================================================
   # Création de 2 profils "user" et d'un profil "admin"
   #=====================================================================
   # Création d'un utilisateur qui peut accéder au login (mot de passe titi)
   - php bin/console fos:user:create testname test@gmail.com titi
   # Création d'un utilisateur qui peut accéder au login (mot de passe titi)
   - php bin/console fos:user:create testuser testuser@gmail.com titi
   # Création d'un admin qui peut accéder au login (mot de passe titi)
   - php bin/console fos:user:create testadmin testadmin@gmail.com titi
   # Droit admin donné à testadmin (pour les tests admin Behat plus bas)
   - php bin/console fos:user:promote testadmin ROLE_ADMIN


   #=====================================================================
   # Elasticsearch
   - wget -q --waitretry=1 --retry-connrefused -T 10 -O - http://127.0.0.1:9200
   #=====================================================================
   # Outils de tests (fonctionnels et unitaires)
   #=====================================================================
   # PHPUnit est un framework open source de tests unitaires dédié au langage Php.
   # Il permet l'implémentation des tests de régression en vérifiant que les exécutions correspondent 
   # aux assertions prédéfinies.
   - ./vendor/bin/simple-phpunit --verbose
   # phpspec is a tool which can help you write clean and working PHP code using behaviour driven 
   # development or BDD. BDD is a technique derived from test-first development.
   # BDD is a technique used at story level and spec level. phpspec is a tool for use at the spec level 
   # or SpecBDD. The technique is to first use a tool like phpspec to describe the behaviour of an object 
   # you are about to write. 
   # Next you write just enough code to meet that specification and finally you refactor this code.
   - vendor/bin/phpspec run
   # A tool to automatically fix PHP coding standards issues
   - ./vendor/bin/php-cs-fixer fix --using-cache=no --verbose --dry-run --diff --rules=@Symfony src 
   # Behat is an open source behavior-driven development framework for PHP
   # you start by writing human-readable sentences that describe a feature of your application and how it should work, 
   # and only then implement this behavior in software.
   - vendor/bin/behat
   #=====================================================================

after_failure:
  # Récupération des log
  - cat var/log/test.log

cache:
  directories:
    - $HOME/.php-cs-fixer

# Define an environment variable
env:
  - SYMFONY_VERSION="4.1.3" DB=mysql