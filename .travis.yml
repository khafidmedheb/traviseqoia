language: php

dist: trusty
sudo: required

addons:
   chrome: stable
   # Pour Elasticsearch
   apt:
    packages:
      - oracle-java8-set-default 

sudo: true

php:
  - '7.1'

services:
   - mysql
   # ElasticSearch uses the default configuration and is available on 127.0.0.1.
   - elasticsearch

# Cache composer packages so "composer install" is faster
cache:
   directories:
     - $HOME/.composer/cache/files

install:
  - wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.1.1.tar.gz
  - tar -xzf elasticsearch-5.1.1.tar.gz
  - ./elasticsearch-5.1.1/bin/elasticsearch &

before_script:
  #=====================================================================
  # Elasticsearch
  #=====================================================================
  - sleep 10 # ElasticSearch takes few seconds to start...
  # - curl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.1.1.deb && \
  # - sudo dpkg -i --force-confnew elasticsearch-5.1.1.deb && \
  # - sudo service elasticsearch start
  #=====================================================================
  - composer install
  - touch .env
  - cp .env.dist .env
  # Pour utiliser Behat
  # - "sh start-server.sh > /dev/null &"
  # - "phantomjs --webdriver=4444 > /dev/null &"

script:
   - google-chrome-stable --no-sandbox --headless --disable-gpu --remote-debugging-port=9222 http://127.0.0.1:8000 &
   - php bin/console server:run &
   #=====================================================================
   # Accès à la base de données
   #=====================================================================
   - php bin/console doctrine:database:create --env=test
   - php bin/console doctrine:schema:create --env=test
   - php bin/console doctrine:fixtures:load -n --env=test
   #=====================================================================
   # Elasticsearch
   - wget -q --waitretry=1 --retry-connrefused -T 10 -O - http://127.0.0.1:9200
   #=====================================================================
   # Outils de tests (fonctionnels et unitaires)
   #=====================================================================
   - ./vendor/bin/simple-phpunit --verbose
   # A tool to automatically fix PHP coding standards issues
   - ./vendor/bin/php-cs-fixer fix --using-cache=no --verbose --dry-run --diff --rules=@Symfony src 
   # Behat is an open source behavior-driven development framework for PHP
   # you start by writing human-readable sentences that describe a feature of your application and how it should work, 
   # and only then implement this behavior in software.
   # - vendor/bin/behat --profile=default -f progress
   - vendor/bin/behat
   #=====================================================================

after_failure:
  - cat var/log/test.log

cache:
  directories:
    - $HOME/.php-cs-fixer

# Define an environment variable
env:
  - SYMFONY_VERSION="3.4" DB=mysql