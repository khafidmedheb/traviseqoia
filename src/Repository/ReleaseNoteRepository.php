<?php

namespace Repository;

/**
 * FiltreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReleaseNoteRepository extends \Doctrine\ORM\EntityRepository
{
    
    /**
     * @param  int $id TODO
     *
     * @return ReleaseNote[] Returns an array of Release objects
     */
    public function findFirst($id)
    {
        $sql = 'select r from App:ReleaseNote r where r.id= :id order by r.id desc';

        $results = $this->getEntityManager()->createQuery($sql)->setParameters(array("id" => $id,))->setMaxResults(1)->getOneOrNullResult();

        return $results;
    }


    // /**
    //  * @param  string $type
    //  * @param  string $user
    //  *
    //  * @return Entity
    //  */
    // public function findFilterByType($type, $user)
    // {
    //     $sql = 'select f from MercuryBundle:Filtre f where f.type= :type and f.utilisateur= :user order by f.id desc';
    //     $results = $this->getEntityManager()->createQuery($sql)->setParameters(array("type" => $type, "user" => $user))->setMaxResults(1)->getOneOrNullResult();

    //     return $results;
    // }

    // /**
    //  * @param  string $nom
    //  * @param  string $type
    //  * @param  string $user
    //  *
    //  * @return Entity
    //  */
    // public function findLast($nom, $type, $user)
    // {
    //     $sql = 'select f from MercuryBundle:Filtre f where f.nom= :nom and f.type= :type and f.utilisateur= :user order by f.id desc';
    //     $results = $this->getEntityManager()->createQuery($sql)->setParameters(array("nom" => $nom, "type" => $type, "user" => $user))->setMaxResults(1)->getOneOrNullResult();

    //     return $results;
    // }

    // /**
    //  * @param  string $user
    //  * @param  string $type
    //  *
    //  * @return Entity
    //  */
    // public function findFavFiltersByType($user, $type)
    // {
    //     $sql = "SELECT f 
    //             FROM MercuryBundle:Filtre f 
    //             WHERE f.type = :type
    //             AND f.utilisateur = :user";
    //     $results = $this->getEntityManager()->createQuery($sql)->setParameters(array("user" => $user, "type" => $type))->getResult();

    //     return $results;
    // }

    // /**
    //  * @param  string $user
    //  *
    //  * @return Entity
    //  */
    // public function findFavFilters($user)
    // {
    //     $sql = "SELECT f 
    //             FROM MercuryBundle:Filtre f 
    //             WHERE f.utilisateur = :user
    //             ORDER BY f.type";
    //     $results = $this->getEntityManager()->createQuery($sql)->setParameters(array("user" => $user))->getResult();

    //     return $results;
    // }

    // /**
    //  * @param  string $user
    //  * @param  string $type
    //  * @param  string $valeur
    //  *
    //  * @return Entity
    //  */
    // public function verifyFilterValue($user, $type, $valeur)
    // {
    //     return $this->getEntityManager()->createQuery("
    //         SELECT f
    //         FROM MercuryBundle:Filtre f
    //         WHERE f.utilisateur = :user
    //         AND f.type = :type
    //         AND f.valeur = :valeur")
    //             ->setParameters(array(
    //                 'user' => $user,
    //                 'type' => $type,
    //                 'valeur' => $valeur,
    //             ))
    //             ->getResult();
    // }
}
